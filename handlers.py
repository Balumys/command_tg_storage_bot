import db_handler
from telegram.ext import CommandHandler, MessageHandler, Filters
from markups import start_keyboard, storage

from db import Base, Customer, Orders, Storage, Box


def start(update, context):
    hello_message_to_new_user = (
        "\n"
        "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç *Garbage Collector* ‚Äî –°–∫–ª–∞–¥ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è!\n"
        "–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∞—Ä–µ–Ω–¥–∞ –±–æ–∫—Å–∞?\n"
        "–° —Ä–∞–¥–æ—Å—Ç—å—é –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º –ø–æ –Ω–∞—à–∏–º —É—Å–ª—É–≥–∞–º.\n"
        "–ê –ø–æ–∫–∞ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∏ —Ç–¥...\n"
    )
    first_name = update.message.from_user.first_name
    photo_path = 'media/storage.jpg'
    with open(photo_path, 'rb') as file:
        update.message.reply_photo(
            photo=file,
            caption=f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å *{first_name}*, {hello_message_to_new_user}",
            reply_markup=start_keyboard(),
            parse_mode='markdown'
        )

    db_handler.add_customer(first_name, update.message.from_user.last_name)  # JUST FOR TEST


def button(update, context):
    text = update.message.text
    if text == "üéø –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑":
        addresses = db_handler.get_storage_addresses()  # JUST FOR TEST
        address_text = "\n".join(addresses)
        update.message.reply_text(
            f'        –ù–∞—à–∏ —Å–∫–ª–∞–¥—ã –Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –ø–æ –∞–¥—Ä–µ—Å–∞–º:\n{address_text}\n'
            f'        \n–í—ã–±–µ—Ä–µ—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –í–∞–º —Å–∫–ª–∞–¥.\n'
            f'        \n–¢–∞–∫ –∂–µ —É –Ω–∞—Å –µ—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ —Å–∫–ª–∞–¥–∞.\n',
            reply_markup=storage(addresses)
        )
    elif text == "üìï –ü—Ä–∞–≤–∏–ª–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è":
        with open('media/Rules.txt', 'rb') as file:
            update.message.reply_document(file)
    elif text == "üí∞ –¶–µ–Ω—ã":
        with open('media/tariff.pdf', 'rb') as file:
            update.message.reply_document(file)
    elif text == "üîô –ù–∞–∑–∞–¥":
        start(update, context)


start_handler = CommandHandler('start', start)
button_handler = MessageHandler(Filters.text, button)
