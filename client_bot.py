import handlers
import db_handler
import bitly_handler
import markups as m

from datetime import timedelta
from telegram.ext import (
    Filters,
    MessageHandler,
    CallbackQueryHandler,
    CommandHandler,
    ConversationHandler,
    Updater,
)
from environs import Env


def start(update, context):
    user_id = update.message.from_user.id
    context.bot.send_message(
        chat_id=user_id,
        text='–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫!\n'
             '–í –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤,\n'
             '–∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å —É –∫–ª–∏–µ–Ω—Ç–∞ –∏ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —Å–∫–ª–∞–¥.\n'
             '–ê —Ç–∞–∫–∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø–æ —Ä–µ–∫–ª–∞–º–Ω–æ–π —Å—Å—ã–ª–∫–µ.',
        reply_markup=m.client_start_keyboard()
    )


def user_input(update, context):
    user_id = update.message.from_user.id
    input_text = update.message.text
    bitly_token = '13c434ebdd562ba3e7af8a21050652022f1f836e'
    url = 'bit.ly/41Mqpoj'
    count_clicks = bitly_handler.count_clicks(bitly_token, url)
    if input_text == 'üéø –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        context.bot.send_message(
            chat_id=user_id,
            text=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø–æ —Ä–µ–∫–ª–∞–º–Ω–æ–π —Å—Å—ã–ª–∫–µ {url} - '
                 f'{count_clicks}',
        )
    if input_text == 'üöö –ó–∞–∫–∞–∑—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π':
        orders = db_handler.get_orders_to_delivery()
        if orders:
            update.message.reply_text(
                '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:',
                reply_markup=m.customer_orders_keyboard_(orders)
            )
        else:
            update.message.reply_text('–ù–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –≥–æ—Ç–æ–≤—ã—Ö –∫ –¥–æ—Å—Ç–∞–≤–∫–µ –ø–æ–∫–∞ –Ω–µ—Ç.')

    if input_text == 'üì¶ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –ó–∞–∫–∞–∑—ã':
        orders = db_handler.get_expired_orders()
        if orders:
            update.message.reply_text(
                '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:',
                reply_markup=m.customer_orders_keyboard_(orders)
            )
        else:
            update.message.reply_text('–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç.')


def print_order_info(update, context):
    query = update.callback_query
    query.answer()
    order_id = query.data.split('_')[-1]
    order_data = db_handler.get_order_by_id(order_id)
    query.edit_message_text(
        text='–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:\n' \
             f'–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ - *‚Ññ{order_id}*\n' \
             f'–†–∞–∑–º–µ—Ä –±–æ–∫—Å–∞ - *{order_data["box_size"]}*\n' \
             f'–°—Ä–æ–∫ –Ω–∞—á–∞–ª–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è - *{order_data["created_at"].date()}*\n' \
             f'–°—Ä–æ–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ö—Ä–∞–Ω–µ–Ω–∏—è - *{order_data["expired_at"].date()}*\n' \
             f'–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ - *{order_data["price"]}*\n\n' \
             '–î–∞–Ω–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∑–∞–∫–∞–∑–∞:\n'
             f'–ò–º—è - {order_data["customer_name"]}\n' \
             f'–ù–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞ - {order_data["customer_phone"]}',
        parse_mode='markdown',
    )


def main():
    env = Env()
    env.read_env()

    tg_token = env('TG_CLIENT_BOT_TOKEN')

    updater = Updater(tg_token)
    dispatcher = updater.dispatcher

    # Command handlers
    dispatcher.add_handler(CommandHandler('start', start))

    # Text handlers
    dispatcher.add_handler(MessageHandler(Filters.text, user_input))

    # Callback handlers
    dispatcher.add_handler(
        CallbackQueryHandler(print_order_info, pattern=r'take_order_\d+')
    )

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
